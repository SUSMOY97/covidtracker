{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.js","Components/CountryPicker/CountryPicker.js","Components/Chart/Chart.js","App.js","index.js","App.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Chart/Chart.module.css","image/image.png"],"names":["module","exports","Cards","state","country","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","fetcheddata","confirmed","value","Date","lastUpdate","toDateString","varaiant","recovered","deaths","CountryPicker","handlecountrychange","useState","fetchedCountries","setFetchedCountries","fetchcountries","a","Axios","get","countries","data","modifiedcountries","map","name","useEffect","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","dailyData","setDailyData","fetchDailyData","modifiedData","total","date","reportDate","barChar","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","App","url","setState","fetchData","changeableurl","image","src","coronaImage","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7381c911.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__11v2i\",\"card\":\"Cards_card___ZUV1\",\"infected\":\"Cards_infected__3QpCs\",\"recovered\":\"Cards_recovered__3MiYH\",\"deaths\":\"Cards_deaths__1hHBC\"};","import React from \"react\" ;\r\nimport {Card,CardContent,Typography,Grid} from \"@material-ui/core\"\r\nimport styles from \"./Cards.module.css\"\r\nimport cx from \"classnames\";\r\n\r\n\r\n\r\nconst Cards = ({state})=>{\r\n    const {country} = state;\r\n    console.log(country)\r\n    \r\n     \r\n   \r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant = \"h5\">{state.fetcheddata?.confirmed?.value}</Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(state.fetcheddata?.lastUpdate).toDateString()}</Typography>\r\n                    <Typography varaiant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant = \"h5\">{state.fetcheddata?.recovered?.value}</Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(state.fetcheddata?.lastUpdate).toDateString()}</Typography>\r\n                    <Typography varaiant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant = \"h5\">{state.fetcheddata?.deaths?.value}</Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(state.fetcheddata?.lastUpdate).toDateString()}</Typography>\r\n                    <Typography varaiant=\"body2\">Number deaths caused by COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards ; ","import React, {useState,useEffect}from \"react\" ;\r\n\r\nimport {NativeSelect,FormControl} from \"@material-ui/core\"\r\nimport styles from \"./CountryPicker.module.css\"\r\nimport Axios from \"axios\"\r\n\r\n\r\nconst CountryPicker = ({handlecountrychange})=>{\r\n    const [fetchedCountries,setFetchedCountries] = useState([])\r\n    const fetchcountries = async() => {\r\n        const {data:{countries}} = await Axios.get(\"https://covid19.mathdro.id/api/countries\")\r\n        console.log(countries)\r\n        const modifiedcountries = countries.map((country)=>country.name)\r\n        setFetchedCountries(modifiedcountries)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchcountries();\r\n    },[setFetchedCountries])\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handlecountrychange(e.target.value)}>\r\n                <option value=\"global\">Choose Country...</option>\r\n                {fetchedCountries.map((country,i)=><option value={country} key={i}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport default CountryPicker ; ","import React,{useState,useEffect} from \"react\" ;\r\nimport Axios from \"axios\" ;\r\nimport {Line,Bar} from \"react-chartjs-2\" ;\r\nimport styles from \"./Chart.module.css\"\r\n\r\n\r\nconst Chart = ({state})=>{\r\n    const [dailyData,setDailyData] = useState({})\r\n    const {fetcheddata} = state\r\n    console.log(fetcheddata?.confirmed)\r\n    const {country} = state\r\n    console.log(country)\r\n\r\n    \r\n    const fetchDailyData=  async ()=>{\r\n        const {data} = await Axios.get(\"https://covid19.mathdro.id/api/daily\")\r\n        console.log(data)\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed?.total,\r\n            deaths: dailyData.deaths?.total,\r\n            date: dailyData.reportDate\r\n\r\n        }))\r\n        setDailyData(modifiedData)\r\n      }\r\n\r\n    useEffect(()=>{\r\n        // const fetchAPI = async ()=> {\r\n        //     setDailyData(await fetchDailyData())\r\n        // }\r\n        // fetchAPI();\r\n        fetchDailyData();\r\n    },[])\r\n\r\n    const barChar = (\r\n        fetcheddata?.confirmed ? (<Bar data={{\r\n            labels: [\"Infected\",\"Recovered\",\"Deaths\"],\r\n            datasets:[{\r\n                label:'People',\r\n                backgroundColor:[\"rgba(0,0,255,0.5)\",\"rgba(0,255,0,0.5)\",\"#d50000\"],\r\n                data:[state.fetcheddata?.confirmed?.value,state.fetcheddata?.recovered?.value,state.fetcheddata?.deaths?.value]\r\n            }]\r\n            \r\n        }} options={{\r\n            legend:{display:false},\r\n            title:{display:true,text:`Current state in ${country}`}\r\n            \r\n            }}/>):null\r\n\r\n    )\r\n    \r\n\r\n    const lineChart = (\r\n        dailyData.length?(<Line\r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:\"Infected\",\r\n                    borderColor:\"#3333ff\",\r\n                    fill:true\r\n\r\n                    },{\r\n                        data:dailyData.map(({deaths})=>deaths),\r\n                    label:\"Deaths\",\r\n                    borderColor:\"red\",\r\n                    backgroundColor:\"rgba(255,0,0,0.5)\",\r\n                    fill:true\r\n                    }]\r\n            }}\r\n        />):null\r\n\r\n    )\r\n\r\n\r\n    return (\r\n       <div className={styles.container}>\r\n       {country?barChar:lineChart}\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chart ; ","import React,{useEffect,useState} from 'react';\n\n\n\nimport Cards from \"./Components/Cards/Cards\";\nimport CountryPicker from \"./Components/CountryPicker/CountryPicker\";\nimport Chart from \"./Components/Chart/Chart\";\nimport styles from \"./App.module.css\"\nimport coronaImage from \"./image/image.png\"\n\nimport Axios from 'axios';\n\nfunction App() {\n  const url = \"https://covid19.mathdro.id/api\";\n  const [state,setState] = useState({\n    data:{},\n    country:''\n  })\n\n  \n\n  \n\n\n  const fetchData = async (country) =>{\n    let changeableurl = url;\n    if(country){\n      changeableurl = `${url}/countries/${country}`\n    }\n    const {data} = await Axios.get(changeableurl)\n    console.log(data)\n    \n    // const modifieddata = {\n    //   confirmed:data.confirmed,\n    //   recovered:data.recovered,\n    //   deaths:data.deaths,\n    //   lastUpdate:data.lastUpdate\n    // }\n    setState({\n      confirmed:data.confirmed,\n      recovered:data.recovered,\n      deaths:data.deaths,\n      lastUpdate:data.lastUpdate\n    })\n    return {confirmed:data.confirmed,\n      recovered:data.recovered,\n      deaths:data.deaths,\n      lastUpdate:data.lastUpdate}\n\n    \n  }\n  const handlecountrychange =async (country) =>{\n    \n    const fetcheddata = await fetchData(country)\n    \n    console.log(country)\n    console.log(fetcheddata)\n    setState({fetcheddata,country:country})\n  }\n  \n  \n    \n\n  \n  useEffect(()=>{\n   fetchData();\n   \n   \n   \n   \n   \n  \n   \n\n  },[])\n\n  \n\n  return (\n    \n    <div className={styles.container}>\n    <img className={styles.image} src={coronaImage} alt=\"\"/>\n    <Cards state={state}/>\n    <CountryPicker handlecountrychange={handlecountrychange}/>\n    <Chart state={state}/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__k26no\",\"image\":\"App_image__jKcLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__Llkiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1qamA\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}